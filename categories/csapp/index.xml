<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CSAPP on Hi-^_^</title>
    <link>https://Anlarry.github.io/categories/csapp/</link>
    <description>Recent content in CSAPP on Hi-^_^</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en</language>
    <copyright>Jiali Wang</copyright>
    <lastBuildDate>Mon, 16 Mar 2020 21:24:00 +0800</lastBuildDate>
    <atom:link href="https://Anlarry.github.io/categories/csapp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSAPP arch lab</title>
      <link>https://Anlarry.github.io/posts/csapp/csapp-arch-lab/</link>
      <pubDate>Mon, 16 Mar 2020 21:24:00 +0800</pubDate>
      <guid>https://Anlarry.github.io/posts/csapp/csapp-arch-lab/</guid>
      <description>&lt;h1 id=&#34;arch-lab&#34;&gt;arch lab&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Anlarry/CSAPP/blob/master/archlab-handout.tar&#34;&gt;Download archlab-handout&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;安装模拟器&#34;&gt;安装模拟器&lt;/h2&gt;
&lt;p&gt;解决&lt;code&gt;undefined reference to ’matherr‘&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://blog.csdn.net/g_x_l_233/article/details/83957381&#34;&gt;Y86-64模拟器的安装与出现对&amp;rsquo;matherr&amp;rsquo;未定义引用问题的解决&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;part-a&#34;&gt;Part A&lt;/h2&gt;
&lt;p&gt;在这部分要在&lt;code&gt;sim/misc&lt;/code&gt;中完成，我们要编写和模拟三个&lt;code&gt;Y86-64&lt;/code&gt;程序&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sum.ys&lt;/code&gt;： 遍历链表求和&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# begin at 0

    .pos 0
    irmovq stack,%rsp
    call main
    halt

    .align 8
    ele1:
        .quad  0x00a
        .quad ele2
    ele2:
        .quad 0x0b0
        .quad ele3
    ele3:
        .quad 0xc00
        .quad 0

main:
    irmovq ele1,%rdi
    call rsum
    ret

rsum:
    xorq %rax,%rax
    andq %rdi,%rdi 
    je L1
    pushq %rbx
    mrmovq (%rdi),%rbx
    mrmovq 8(%rdi),%rdi
    call rsum
    addq %rbx,%rax
    popq %rbx
L1:
    ret

    .pos 0x200
stack:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用&lt;code&gt;YAS&lt;/code&gt;编译后，再用&lt;code&gt;YIS&lt;/code&gt;运行&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
